from django.db import models
from parent.models import Child
from accounts.models import AdvancedUser

# class Teacher(models.Model):
#     email = models.EmailField(verbose_name="–ü–æ—á—Ç–∞", unique=True)
#     password = models.TextField(verbose_name="–ü–∞—Ä–æ–ª—å")
#     first_name = models.CharField(max_length=32, verbose_name="–ò–º—è")
#     last_name = models.CharField(max_length=32, verbose_name="–§–∞–º–∏–ª–∏—è")
#     patronymic = models.CharField(max_length=32, verbose_name="–û—Ç—á–µ—Å—Ç–≤–æ")
#
#     class Meta:
#         verbose_name = "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
#         verbose_name_plural = "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏"
#
#     def __str__(self):
#         return self.email


class Courses(models.Model):
    name = models.CharField(max_length=255, verbose_name="–ù–∞–∑–∞–Ω–∏–µ –∫—É—Ä—Å–∞")
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞")
    teacher = models.ForeignKey(AdvancedUser, on_delete=models.CASCADE,
                                verbose_name="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", related_name="teacher_course")
    is_deleted = models.BooleanField(verbose_name="–£–¥–∞–ª–µ–Ω", default=False)
    emoji = models.CharField(max_length=255, verbose_name="Emoji", default="üòÄ")

    class Meta:
        verbose_name = "–ö—É—Ä—Å"
        verbose_name_plural = "–ö—É—Ä—Å—ã"

    def __str__(self):
        return str(self.id)


class Lessons(models.Model):
    name = models.CharField(max_length=255, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
    date = models.DateField(verbose_name="–î–∞—Ç–∞ –∑–∞–Ω—è—Ç–∏—è")
    time = models.TimeField(verbose_name="–í—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è")
    information = models.TextField(verbose_name="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–Ω—è—Ç–∏–∏")
    # –ù–∞–∑–≤–∞–Ω–∏–µ —É Lessons.course - lessons_in_course. BE CAREFUL!
    course = models.ForeignKey(Courses, on_delete=models.CASCADE, verbose_name="–ö—É—Ä—Å", related_name="lessons_in_course")

    class Meta:
        verbose_name = "–ó–∞–Ω—è—Ç–∏–µ"
        verbose_name_plural = "–ó–∞–Ω—è—Ç–∏—è"

    def __str__(self):
        return str(f"{self.course.name} {self.id}")


class Attendance(models.Model):
    """–ö–ª–∞—Å—Å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –º–æ–¥–µ–ª—å –¥–ª—è —Å—É—â–Ω–æ—Å—Ç–∏ '–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å'."""
    paid_confirmed_parent = models.BooleanField(default=False, blank=True,
                                                verbose_name="–†–æ–¥–∏—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–ø–ª–∞—Ç—É")
    paid_confirmed_teacher = models.BooleanField(default=False, blank=True,
                                                 verbose_name="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–ø–ª–∞—Ç—É")
    lesson = models.ForeignKey(Lessons, on_delete=models.CASCADE, verbose_name="–ó–∞–Ω—è—Ç–∏–µ")

    class Meta:
        verbose_name = "–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å —É—á–µ–Ω–∏–∫–∞"
        verbose_name_plural = "–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å —É—á–µ–Ω–∏–∫–æ–≤"